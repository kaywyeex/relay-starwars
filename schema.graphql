input CreateShipMutationInput {
    shipName: String!
    factionId: ID!
    clientMutationId: String
}

type CreateShipMutationPayload {
    newShipEdge: ShipEdge
    faction: Faction
    clientMutationId: String
}

input DeleteShipMutationInput {
    factionId: ID!
    id: ID!
    clientMutationId: String
}

type DeleteShipMutationPayload {
    deletedShipId: ID
    faction: Faction
    clientMutationId: String
}

# Faction in the star wars saga
type Faction implements Node {
    # The ID of an object
    id: ID!
    # id of faction in the db
    factionId: String
    # Name of the faction
    name: String
    # Ships that belong to this faction
    ships(after: String, first: Int, before: String, last: Int): ShipConnection
}

# ...
type Mutation {
    createShipMutation(
        input: CreateShipMutationInput!
    ): CreateShipMutationPayload
    deleteShipMutation(
        input: DeleteShipMutationInput!
    ): DeleteShipMutationPayload
}

# An object with an ID
interface Node {
    # The id of the object.
    id: ID!
}

# Information about pagination in a connection.
type PageInfo {
    # When paginating forwards, are there more items?
    hasNextPage: Boolean!
    # When paginating backwards, are there more items?
    hasPreviousPage: Boolean!
    # When paginating backwards, the cursor to continue.
    startCursor: String
    # When paginating forwards, the cursor to continue.
    endCursor: String
}

type Query {
    # Fetches an object given its ID
    node(
        # The ID of an object
        id: ID!
    ): Node
    factions(names: [String]): [Faction]
    ships(factionId: String): [Ship]
}

# Starship in the star wars saga
type Ship implements Node {
    # The ID of an object
    id: ID!
    name: String
}

# A connection to a list of items.
type ShipConnection {
    # Information to aid in pagination.
    pageInfo: PageInfo!
    # A list of edges.
    edges: [ShipEdge]
}

# An edge in a connection.
type ShipEdge {
    # The item at the end of the edge
    node: Ship
    # A cursor for use in pagination
    cursor: String!
}
